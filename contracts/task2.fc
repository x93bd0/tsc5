#include "imports/stdlib.fc";

(cell, ()) ~udict_set(cell dict, int key_len, int index, slice value) asm(value index dict key_len) "DICTUSET";
(slice, int) udict_get?(cell dict, int key_len, int index) asm(index dict key_len) "DICTUGET" "NULLSWAPIFNOT";
(cell, int) udict_delete?(cell dict, int key_len, int index) asm(index dict key_len) "DICTUDEL";
int dict_empty?(cell c) asm "DICTEMPTY";

(int) slice_data_equal?(slice s1, slice s2) asm "SDEQ";


() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
  if (in_msg_body.slice_empty?())
  {
    return ();
  }

  int op = in_msg_body~load_uint(32);
  in_msg_body~load_uint(64);

  slice cs = in_msg_full.begin_parse();
  cs~skip_bits(4);
  slice addr = cs~load_msg_addr();

  slice data = get_data().begin_parse();
  slice admin = data~load_msg_addr();
  cell dict = data~load_dict();

  if (op == 0x368ddef3)
  {
    throw_unless(120, slice_data_equal?(admin, addr));

    slice SAddr = in_msg_body~load_msg_addr().skip_bits(11);
    dict~udict_set(256,
      SAddr~load_uint(256), in_msg_body~load_bits(32));

    set_data(begin_cell()
      .store_slice(admin)
      .store_dict(dict)
    .end_cell());
  }

  elseif (op == 0x278205c8)
  {
    throw_unless(120, slice_data_equal?(admin, addr));
    slice SAddr = in_msg_body~load_msg_addr().skip_bits(11);
    (dict, int flag) = udict_delete?(dict, 256, SAddr~load_uint(256));
    throw_if(121, flag == 0);

    set_data(begin_cell()
      .store_slice(admin)
      .store_dict(dict)
    .end_cell());
  }

  elseif (op == 0x68530b3)
  {
    throw_if(122, dict.dict_empty?());
  }

  elseif (op == 0x7362d09c)
  {
    throw_if(122, dict.dict_empty?());
  }
}

(cell) get_users() method_id {
  slice d = get_data().begin_parse();
  d~load_msg_addr();
  return d~load_dict();
}

(slice) get_user_share(slice user_address) method_id {
  user_address~skip_bits(11);
  (slice d, int a) = get_users().udict_get?(256,
    user_address~load_uint(256));
  return d;
}
